#!/bin/sh
prompt_install() {
	echo -n "$1 não está instalado, gostaria de instalar? (y/n) " >&2
	old_stty_cfg=$(stty -g)
	stty raw -echo
	answer=$( while ! head -c 1 | grep -i '[ny]' ;do true ;done )
	stty $old_stty_cfg && echo
	if echo "$answer" | grep -iq "^y" ;then
		# This could def use community support
		if [ -x "$(command -v apt)" ]; then
			sudo apt install $1 -y

		elif [ -x "$(command -v brew)" ]; then
			brew install $1

		elif [ -x "$(command -v pkg)" ]; then
			sudo pkg install $1

		elif [ -x "$(command -v pacman)" ]; then
			sudo pacman -S $1

		else
			echo "Não pudemos inferir a aplicação gerenciadora de pacotes! Tente instalar $1 por sua conta e depois execute este procedimento novamente." 
		fi 
	fi
}

check_for_software() {
	echo "Testando se $1 está instalado"
	if ! [ -x "$(command -v $1)" ]; then
		prompt_install $1
	else
		echo "$1 está instalado"
	fi
}

check_default_shell() {
	if [ -z "${SHELL##*zsh*}" ] ;then
			echo "O interpretador de comandos padrão é o zsh."
	else
		echo -n "O insterpretador padrão não é o zsh. podemos mudar isso? (chsh -s \$(which zsh)) (y/n)"
		old_stty_cfg=$(stty -g)
		stty raw -echo
		answer=$( while ! head -c 1 | grep -i '[ny]' ;do true ;done )
		stty $old_stty_cfg && echo
		if echo "$answer" | grep -iq "^y" ;then
			chsh -s $(which zsh)
		else
			echo "Alerta: Se você habilitar a execução automática do tmux junto ao zsh, zsh não será o interpretador dentro do tmux."
		fi
	fi
}

vim_plugin_prompt_install() {
	if ! [ -x "$(command -v git)" ]; then
		echo "Ops! A instalação do pathogen utiliza o comando 'curl'."
		prompt_install git
	fi
	if [ -e ~/.vim/bundle/$(basename $1) ]; then
		echo "O plugin $(basename $1) já está instalado."
	else
		echo -n "O plugin $(basename $1) não está instalado, gostaria de instalar? (y/n) " >&2
		old_stty_cfg=$(stty -g)
		stty raw -echo
		answer=$( while ! head -c 1 | grep -i '[ny]' ;do true ;done )
		stty $old_stty_cfg && echo
		if echo "$answer" | grep -iq "^y" ;then
			git clone $1 ~/.vim/bundle/$(basename $1)
		else
			echo "Ignorando instalação de $(basename $1)"
		fi
	fi
}

vim_plugins_install() {
	echo "Confirmando instalação do vim-pathogen (https://github.com/tpope/vim-pathogen)"
	if [ -e ~/.vim/autoload/pathogen.vim ]; then
		echo "O pathogen parece já estar instalado"
	else 
		echo "O pathogen parece não estar instalado. Istalando"
		if ! [ -x "$(command -v curl)" ]; then
			echo "Ops! A instalação do pathogen utiliza o comando 'curl'."
			prompt_install curl
		fi
		mkdir -p ~/.vim/autoload ~/.vim/bundle && curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
	fi

	echo "Instalando pugins para o vim:"
	vim_plugin_prompt_install https://github.com/leafgarland/typescript-vim.git
	vim_plugin_prompt_install https://github.com/scrooloose/nerdtree.git
}

echo "O procedimento de instalação é"
echo "1. Teste para assegurar que vc tenha instalados"
echo "   . zsh,"
echo "   . vim,"
echo "   . tmux,"
echo "   . xclip."
echo "2. Instalação dos que estiverem faltando"
echo "3. Verificar se seu interpretador padrão é o zsh"
echo "4. Tentaremos definir isto, se não estiver" 
echo "5. Instalaremos o Pathogen e os plugins"

echo "Vamos lá? (y/n)"
old_stty_cfg=$(stty -g)
stty raw -echo
answer=$( while ! head -c 1 | grep -i '[ny]' ;do true ;done )
stty $old_stty_cfg
if echo "$answer" | grep -iq "^y" ;then
	echo 
else
	echo "Saindo, nada foi alterado."
	exit 0
fi


check_for_software zsh
echo 
check_for_software vim
echo
check_for_software tmux
echo
check_for_software xclip
echo

check_default_shell
vim_plugins_install

echo
echo -n "Você gostaria de salvar os atuais dotfiles? (y/n) "
old_stty_cfg=$(stty -g)
stty raw -echo
answer=$( while ! head -c 1 | grep -i '[ny]' ;do true ;done )
stty $old_stty_cfg
if echo "$answer" | grep -iq "^y" ;then
	mv ~/.zshrc ~/.zshrc.old
	mv ~/.tmux.conf ~/.tmux.conf.old
	mv ~/.vimrc ~/.vimrc.old
else
	echo -e "\nSaindo sem copiar os antigos dotfiles."
fi

printf "source '$HOME/dotfiles/zsh/zshrc_manager.sh'" > ~/.zshrc
printf "so $HOME/dotfiles/vim/vimrc.vim" > ~/.vimrc
printf "source-file $HOME/dotfiles/tmux/tmux.conf" > ~/.tmux.conf

echo
echo "Refaça o login para carregar as novas configurações do seu shell. Obrgiado!"
